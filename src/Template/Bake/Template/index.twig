{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }}[]|\Cake\Collection\CollectionInterface ${{ pluralVar }}
 */
?>
{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text', 'integer']) %}

<div class="page-title w-100">
    <h2><?= __('{{ pluralHumanName }}') ?></h2>
    <?= $this->AuthLink->link('<i class="fas fa-fw fa-plus-circle"></i> ' . __('Add {{ singularHumanName }}'), ['action' => 'add'], ['class' => 'ontitle btn btn-light btn-outline-success', 'escape' => false]); ?>
</div>
<table class="table table-striped table-hover">
    <thead>
        <tr>
{% for field in fields %}
            <th scope="col"><?= $this->Paginator->sort('{{ field }}') ?></th>
{% endfor %}
            <th scope="col" class="actions"><?= __('Actions') ?></th>
        </tr>
    </thead>
    <tbody>
        <?php foreach (${{ pluralVar }} as ${{ singularVar }}): ?>
        <tr>
{% for field in fields %}
{% set isKey = false %}
{% if associations.BelongsTo %}
{% for alias, details in associations.BelongsTo if field == details.foreignKey %}
{% set isKey = true %}
            <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
{% endfor %}
{% endif %}
{% if isKey is not same as(true) %}
{% set columnData = Bake.columnData(field, schema) %}
{% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
            <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
{% else %}
            <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% endif %}
{% endif %}
{% endfor %}
{% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
            <td class="actions">
                <?= $this->Html->link('<i class="fas fa-fw fa-eye"></i> ' . __('View'), ['action' => 'view', {{ pk|raw }}], ['escape' => false, 'class' => 'mr-3']) ?>
                <?= $this->Html->link('<i class="fas fa-fw fa-pencil-alt"></i> ' . __('Edit'), ['action' => 'edit', {{ pk|raw }}], ['escape' => false, 'class' => 'mr-3']) ?>
                <?= $this->Form->postLink('<i class="fas fa-fw fa-trash"></i> ' . __('Delete'), ['action' => 'delete', {{ pk|raw }}], ['confirm' => __('Are you sure you want to delete # {0}?', {{ pk|raw }}), 'escape' => false, 'class' => 'text-danger']) ?>
            </td>
        </tr>
        <?php endforeach; ?>
    </tbody>
</table>

<?= $this->element('pagination'); ?>